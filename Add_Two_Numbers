/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) {
 *         val = x;
 *         next = null;
 *     }
 * }
 */
public class Solution {
//link: http://leetcode.com/onlinejudge#question_2
    public ListNode addTwoNumbers(ListNode l1, ListNode l2) {
        // Start typing your Java solution below
        // DO NOT write main() function
        if(l1 == null && l2 == null) return null;
        
        ListNode head = null;
        ListNode cur = null;
               
        int tag = 0;
        int curVal;
        while(l1 != null && l2 != null)
        {
            curVal = l1.val + l2.val + tag;
            if(head == null)
            {
                head = new ListNode(0); 
                head.val= curVal % 10;
                tag = curVal / 10;
                cur = head;
            }
            else
            {
                ListNode node = new ListNode(0);
                node.val= curVal % 10;
                tag = curVal / 10;
                cur.next = node;
                cur = node;
            }  
           
             l1 = l1.next;
             l2 = l2.next;
        }
        ListNode left = null;
        if(l1!=null) left = l1;
        else if( l2 != null) left = l2;
        
        while(left != null)
        {
            curVal = left.val + tag;
            left.val = curVal % 10;
            tag = curVal / 10;
            cur.next = left;
            cur = cur.next;
            left = left.next;
            if(tag < 1)
                break;
        }
        if(tag ==1)
        {
            left = new ListNode(0);
            left.val = 1;
            cur.next = left;
        }
       return head;
            
    }
}
