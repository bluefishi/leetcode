/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) {
 *         val = x;
 *         next = null;
 *     }
 * }
 */
public class Solution {
    public ListNode rotateRight(ListNode head, int n) {
        // link: http://leetcode.com/onlinejudge#question_61
        // Start typing your Java solution below
        // DO NOT write main() function
        if(head == null || head.next == null || n<=0) return head;
        ListNode newhead = head;
        ListNode cur = head.next;
        ListNode pre = head;
        int count = 1;
        while(count < n)
        {
            count ++;
            if(cur!= null && cur.next != null)
                cur = cur.next;
            else
                cur = head;
        }
        while(cur != null && cur.next != null)
        {
            cur = cur.next;
            pre = pre.next;
        }
        if(pre.next != null)
        {
            newhead = pre.next;
            cur.next = head;
            pre.next = null;
        }     
        else
            newhead = head;
       
        return newhead;
    }
}
