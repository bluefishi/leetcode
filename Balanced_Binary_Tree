/**
 * Definition for binary tree
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
public class Solution {
    public boolean isBalanced(TreeNode root) {
    //link: http://leetcode.com/onlinejudge#question_110
        // Start typing your Java solution below
        // DO NOT write main() function
        if(root == null) return true;
        if(isBalanced(root.left) && isBalanced(root.right))
        {
            if( Math.abs( getHeight(root.left) - getHeight(root.right) ) <=1)
            return true;
        }
        return false;
    }
    int getHeight(TreeNode node)
    {
        int height = 0;
        if(node !=null)
        {
           if(getHeight(node.left) >= getHeight(node.right))
            height = getHeight(node.left) +1;
           else
            height = getHeight(node.right) +1; 
        }
        
        return height;
    }
}
