/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) {
 *         val = x;
 *         next = null;
 *     }
 * }
 */
public class Solution {
    public ListNode mergeTwoLists(ListNode l1, ListNode l2) {
    //link: http://leetcode.com/onlinejudge#question_21
        // Start typing your Java solution below
        // DO NOT write main() function
        if(l1== null && l2 == null) return null;
        if(l1 == null) return l2;
        if(l2 == null) return l1;
        
        ListNode head = null;
        ListNode cur = null;
        if(l1.val < l2.val)
        {
            head = l1;
            l1 = l1.next;
        }
        else
        {
            head = l2;
            l2 = l2.next;
        }
        cur = head;
        while(l1 != null && l2 != null)
        {
            if(l1.val < l2.val)
            {
                cur.next = l1;
                cur = l1;
                l1 = l1.next;
            }
            else
            {
                cur.next = l2;
                cur = l2;
                l2 = l2.next;
            }
        }
        if(l1 != null) cur.next = l1;
        else if(l2 != null) cur.next = l2;
        return head;
    }
}
