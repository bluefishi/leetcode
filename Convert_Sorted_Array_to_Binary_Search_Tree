/**
 * Definition for binary tree
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
public class Solution {
    public TreeNode sortedArrayToBST(int[] num) {
    //link: http://leetcode.com/onlinejudge#question_108
        // Start typing your Java solution below
        // DO NOT write main() function
       if(num == null || num.length == 0) return null;
       int left = 0;
       int right = num.length-1;
       
       TreeNode root = new TreeNode(0);
       int mid = (left + right) / 2;
       root.val = num[mid];
       
       root.left = sortedArrayToBST(num, left,mid -1);
       root.right = sortedArrayToBST(num, mid+1,right);
       return root;
    }
    TreeNode sortedArrayToBST(int[] num, int left, int right)
    {
        if(left>right) return null;
        TreeNode node = new TreeNode(0);
        if(left == right)
        {
            node.val = num[left];
            node.left = null;
            node.right = null;
        }
        else
        {
            int mid = (left + right) /2;
            node.val = num[mid];
            node.left = sortedArrayToBST(num,left,mid -1);
            node.right = sortedArrayToBST(num,mid+1,right);
        }
        return node;
    }
}
