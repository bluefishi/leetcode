/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) {
 *         val = x;
 *         next = null;
 *     }
 * }
 */
public class Solution {
    public ListNode deleteDuplicates(ListNode head) {
    // link: http://leetcode.com/onlinejudge#question_82
        // Start typing your Java solution below
        // DO NOT write main() function
        if(head == null || head.next == null) return head;
        boolean isDuplicate = false;
        //find head
        while(head.next !=null)
        {
            if(head.val == head.next.val)
            {
                isDuplicate = true;
                head = head.next;
                continue;
            }
            else if(head.val !=head.next.val && isDuplicate)
            {
                head = head.next;
                isDuplicate = false;
                continue;                
            }
            break;
        }
        if(head.next == null && isDuplicate) return null;
        if(head.next == null && !isDuplicate) return head;
        
        ListNode cur = head.next;
        ListNode pre = head;
        isDuplicate = false;
        while(cur.next != null)
        {
            if(cur.val == cur.next.val)
            {
                isDuplicate = true;
                cur = cur.next;
               
            }
            else if(cur.val != cur.next.val && isDuplicate)
            {
                cur = cur.next;
                isDuplicate = false;
               
            }
            else 
            {
              pre.next = cur;
              pre = pre.next;
              cur = cur.next;
            }
        }
        if(cur.next == null && isDuplicate) pre.next = null;
        if(cur.next == null && !isDuplicate) pre.next = cur;
        return head;
    }
}
